# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [12.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies and run tests
        working-directory: ./correcao
        run: |
          npm install
          npm test
      - name: Make envfile atividades
        uses: SpicyPizza/create-envfile@master
        with:
          envkey_DEBUG: false
          envkey_CONN_URL: ${{ secrets.CONN_URL }}
          directory: atividades
      - name: Make envfile correcao
        uses: SpicyPizza/create-envfile@master
        with:
          envkey_DEBUG: false
          envkey_CONN_URL: ${{ secrets.CONN_URL }}
          directory: correcao
      - name: Build atividades
        working-directory: ./atividades
        run: npm run build --if-present
      - name: Build correcao
        working-directory: ./correcao
        run: npm run build --if-present
      - name: Restart Correcao
        run: pm2 restart CorrecaoServer
      - name: Restart Atividades
        run: pm2 restart AtividadesServer

      # - run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}
      # - run: docker build -t luizamendes/correcao ../correcao
      # - run: docker build -t luizamendes/atividades .
      # - run: docker push luizamendes/correcao
      # - run: docker push luizamendes/atividades
    # - name: Deploy to Docker Host
    #   uses: wshihadeh/docker-deployment-action@v1
    #   with:
    #     remote_docker_host: ${{ secrets.UBUNTU_SERVER }}
    #     ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
    #     ssh_public_key: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}
    #     deployment_mode: docker-compose
    #     args: up -d
    #     pre_deployment_command_args: 'bundle exec rake db:migrate'
    #     docker_prune: 'true'
    #     pull_images_first: 'true'
